version: "3"

services:
  db:
    image: postgres:buster
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres_data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  api:
    restart: on-failure
    build:
      context: ./coursebackend
      dockerfile: Dockerfile.dev
    command: sh -c "python manage.py wait_for_db &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./coursebackend:/app
    ports:
      - 8000:8000
    environment:
      - DB_HOST=db
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
      - CACHE_HOST=memcached:11211
      - SECRET_KEY=devsecretkey
      - DEBUG=1
    depends_on:
      - db
      - memcached
  frontend:
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - /app/node_modules
      - ./frontend:/app
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    volumes:
      - ./nginx/dev:/etc/nginx/conf.d
    ports:
      - "5000:80"
    depends_on:
      - api
      - frontend
  memcached:
    image: bitnami/memcached:latest
    ports:
      - "11211:11211"
    expose:
      - "11211"
